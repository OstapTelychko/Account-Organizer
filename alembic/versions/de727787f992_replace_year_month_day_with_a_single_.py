"""Add date column to transactions and remove year, month, day columns in next migration

Revision ID: de727787f992
Revises: 4f698cf3cbac
Create Date: 2025-10-20 22:47:14.111127

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'de727787f992'
down_revision: Union[str, None] = '4f698cf3cbac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('accounts') as batch_op:
        batch_op.alter_column('current_balance',
                   existing_type=sa.FLOAT(),
                   nullable=False)
        batch_op.alter_column('current_total_income',
                   existing_type=sa.FLOAT(),
                   nullable=False)
        batch_op.alter_column('current_total_expenses',
                   existing_type=sa.FLOAT(),
                   nullable=False)
        batch_op.alter_column('start_balance',
                   existing_type=sa.FLOAT(),
                   nullable=False)
        batch_op.alter_column('created_date',
               existing_type=sa.DATETIME(),
               nullable=False)
    
    with op.batch_alter_table('categories') as batch_op:
        batch_op.alter_column('category_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('account_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    
    op.add_column('transactions', sa.Column('date', sa.Date(), nullable=True))

    op.execute("""
        UPDATE transactions
        SET date = DATE(
            CAST(year AS VARCHAR) || '-' || 
            printf('%02d', month) || '-' || 
            printf('%02d', day)
        );
    """)

    with op.batch_alter_table('transactions') as batch_op:
        batch_op.alter_column('category_id',
               existing_type=sa.INTEGER(),
               nullable=False)

        batch_op.create_index('ix_transactions_date', ['date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_index(op.f('ix_transactions_date'), table_name='transactions')
    op.drop_column('transactions', 'date')

    with op.batch_alter_table('transactions') as batch_op:
        batch_op.alter_column('category_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        
    with op.batch_alter_table('categories') as batch_op:
        batch_op.alter_column('account_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('category_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    
    with op.batch_alter_table('accounts') as batch_op:
        batch_op.alter_column('start_balance',
                   existing_type=sa.FLOAT(),
                   nullable=True)
        batch_op.alter_column('current_total_expenses',
                   existing_type=sa.FLOAT(),
                   nullable=True)
        batch_op.alter_column('current_total_income',
                   existing_type=sa.FLOAT(),
                   nullable=True)
        batch_op.alter_column('current_balance',
                   existing_type=sa.FLOAT(),
                   nullable=True)
        batch_op.alter_column('current_total_income',
                   existing_type=sa.FLOAT(),
                   nullable=True)
        batch_op.alter_column('current_balance',
                   existing_type=sa.FLOAT(),
                   nullable=True)
    # ### end Alembic commands ###
